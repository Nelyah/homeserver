---

# expect as available variables:
#
# restic_repos:
#   repo1:
#     password: secret_pass
#     path: /path/to/the/repo1
#     init: true
#   repo2:
#     password: secret_pass2
#     path: /path/to/the/repo2
#     init: true
#
#   restic_backup_data:
#     path:
#       - /path/to/backup1
#       - /path/to/backup2
#     volumes:
#       - volume1
#       - volume2
#     tags:
#       - tag_to_apply1
#       - tag_to_apply2
#     ignore_patterns:
#       - pattern to ignore
#     docker_data_dir: /path/to/docker/data

- name: Backup data to repository
  become: true
  command: >
    restic backup
    {{ [docker_volume_prefix] | product(volumes_to_backup) | map("join", "/") | list | join(" ")}}
    {{ files_to_backup | join(" ")}}
    {{ ['--exclude '] | product(patterns_to_ignore) | map('join') | list | join(' ') }}
    {{ ['--tag '] | product(tags_to_apply) | map('join', ' ') | list | join(' ') }}
  no_log: true
  environment:
    RESTIC_PASSWORD: '{{ repo_keys.value.password }}'
    RESTIC_REPOSITORY: '{{ repo_keys.value.path }}'
  loop: '{{ restic_repos | dict2items }}'
  loop_control:
    loop_var: repo_keys
  vars:
    docker_volume_prefix: '{{ restic_backup_data.docker_data_dir | default("/var/lib/docker") }}/volumes'
    volumes_to_backup: '{{ restic_backup_data.volumes | default([]) }}'
    files_to_backup: '{{ restic_backup_data.path | default([]) }}'
    patterns_to_ignore: '{{ restic_backup_data.ignore_patterns | default([]) }}'
    tags_to_apply: '{{ restic_backup_data.tags | default([]) }}'
  register: restic_backup
  changed_when: "'Added to the repo: 0 B' not in restic_backup.stderr"
  failed_when:
    - restic_backup.rc != 0

- debug:
    msg: "{{ restic_backup.results | json_query('[*].{ repo_path: repo_keys.value.path, backup_output: (stdout_lines) }') }}"

# vi:ft=yaml.ansible
