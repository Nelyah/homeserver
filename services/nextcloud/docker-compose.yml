services:
  mariadb-nc:
    container_name: mariadb-nc
    image: docker.io/mariadb:lts
    stop_grace_period: 1m
    restart: unless-stopped
    volumes:
      - nextcloud_mariadb:/var/lib/mysql
      - ./mariadb.conf:/etc/mysql/my.cnf
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MARIADB_AUTO_UPGRADE=yes
    networks:
      - nextcloud

  nextcloud-app:
    container_name: nextcloud
    image: docker.io/nextcloud:stable-fpm
    stop_grace_period: 1m
    depends_on: 
      - mariadb-nc
      - redis
    restart: unless-stopped
    environment:
      - MYSQL_HOST=mariadb-nc
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - NEXTCLOUD_DATA_DIR=${NC_DATA_DIR}
    volumes:
      - nextcloud_site:${NC_WEBSITE_DIR}
      - nextcloud_data:${NC_DATA_DIR}
    networks:
      - nextcloud

  cron:
    container_name: nextcloud-cron
    image: docker.io/nextcloud:stable-fpm
    stop_grace_period: 1m
    restart: unless-stopped
    volumes:
      - nextcloud_site:${NC_WEBSITE_DIR}
      - nextcloud_data:${NC_DATA_DIR}
    entrypoint: /cron.sh
    networks:
      - nextcloud

  redis:
    image: redis:latest
    container_name: nextcloud_redis
    stop_grace_period: 1m
    volumes:
      - nextcloud_redis_data:/data
    networks:
      - nextcloud
    restart: unless-stopped
    command:
      # Every 60s, write to database if at least 1 entry was given
      - --save 60 1

volumes:
  nextcloud_data:
    external: true
  nextcloud_site:
    external: true
  nextcloud_mariadb:
    external: true
  nextcloud_redis_data:
    external: true

networks:
  nextcloud:
    external: true
