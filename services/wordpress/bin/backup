#! /bin/bash

set -e

function maintenance-is-active ()
{
    docker run --rm \
        --volumes-from wordpress \
        --network wordpress \
        wordpress:cli maintenance-mode is-active
}

function maintenance-on ()
{
    if ! maintenance-is-active; then
        docker run --rm \
            --volumes-from wordpress \
            --network wordpress \
            wordpress:cli maintenance-mode activate
    fi
}

function maintenance-off ()
{
    if maintenance-is-active; then
        docker run --rm \
            --volumes-from wordpress \
            --network wordpress \
            wordpress:cli maintenance-mode deactivate
    fi
}

function run-if-not-running ()
{
    if [[ $(docker-compose -f "${WORDPRESS_FOLDER}/docker-compose.yml" ps 2> /dev/null | wc -l) == 2 ]]; then
        container_not_running=true
        docker-compose up -d
    fi
}

function backup_db ()
{
    docker run --rm \
        --volumes-from wordpress \
        --network wordpress \
        wordpress:cli sh -c "wp db export -" > "$1"
}

function do-backup ()
{
    # Should be daily / weekly / ...
    type_bkp="$1"

    max_bkp="$2"

    WORDPRESS_FOLDER=$(readlink -f "$(dirname $0)/..")
    source "${WORDPRESS_FOLDER}/.env"

    BACKUP_SCRIPT=$(readlink -f "${WORDPRESS_FOLDER}/../../bin/backup-incr")

    tmp_backup_folder=$(mktemp -d)
    DBBACKUP="${tmp_backup_folder}/wordpress_db.sql"
    dc_compose="docker-compose -f ${WORDPRESS_FOLDER}/docker-compose.yml"

    [ "$external" = y ] && BACKUP_DESTINATION="${REMOTE_BACKUP_DESTINATION}"

    run-if-not-running

    maintenance-on

    backup_db "${DBBACKUP}"

    "${BACKUP_SCRIPT}" \
        --prefix "wordpress_${type_bkp}" \
        --max-bkp "${max_bkp}" \
        --dest "${BACKUP_DESTINATION}" \
        --backup-container certificates \
        --backup-container wordpress_site \
        --backup "${WORDPRESS_FOLDER}/docker-compose.yml" \
        --backup "${WORDPRESS_FOLDER}/apache-config" \
        --backup "${WORDPRESS_FOLDER}/bin" \
        --backup "${WORDPRESS_FOLDER}/.env" \
        --backup "${DBBACKUP}" \
        --user "${MY_USER}" \
        --group "${MY_GROUP}" \
        --exclude={.opcache,.maintenance} \
        --exclude={access,error}.log

    [ -n "${container_not_running}" ] && maintenance-off && docker-compose down
}

cleanup() { local RET=$?; rm -rf "${tmp_backup_folder}" ; [ -z "${container_not_running}" ] &&  maintenance-off; exit $RET; }
trap cleanup EXIT INT TERM HUP ERR

args=()
external=n
while (( "$#" > 0 )); do
    case "$1" in
        --external) external=y; shift ;;
        *) args+=( "$1" ) ; shift ;;
    esac
done

if [ "${args[1]}" = weekly ]; then 
    do-backup weekly 3 "$external"
else
    do-backup daily 10 "$external"
fi
